
╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                              CONFIGURATION FILE FORMAT                                                                                                 ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
// NOTES: Lines beginning with double slashes denote comments, in the configuration file, and will be ignored by the configuration reader.
// BLANK LINES ARE NOT PERMITTED!!!  If you need visual space, start the blank line with double slashes and that is acceptable.
// Configuration files are key=value pairs where you are setting a configurable value using the equal assignment operator
// TestFileName - names beginning with this are used to point to the file/files containing the test setting commands.
//    -   The Test Setting Commands file is a described in detail below under the Test File Format Section
// ScreenShotSaveFolder - folder where screenshots should be saved - Must already exist
// BrowserType values: Firefox, Chrome, PhantomJS
// RunHeadless - can be true to run headless or false to show the browser, but PhantomJs is always headless
// TestAllBrowsers - can be true or false.  If false, BrowserType must be set.  If true, BrowserType is ignored and the program will cycle through all browsers.
// SpecifyTestFiles - Can be true to specifiy each file and the order that files are run, or false to select a folder of files that will be ordered alphabetically.
// SortSpecifiedTestFiles - This setting depends upon SpecifyTestFiles being true.
//    -   Can be set to false to manually place the files in the order that you want them to be executed. (Default)
//    -   Can be true to sort the files by the alphabetically and numerically using the number following the word TestFileName.
//       -   An example of the sorted order follows: (TestFileName0, TestFileName1, TestFileName2 etc..)
//       -   This forces a sort to be performed on the names so these will sort numerically.
//       -   If multiple entries have the same number, like (TestFileName0, TestFileName0) those entries will also be sorted alphabetically.
// TestFolderName - will contain the folder where test files exist when SpecifyTestFiles is false.
// FolderFileFilterType - type of filtering you want to use to select similarly named files within a folder options are: 
//    -   [Starts With], [Contains] and [Ends With] 
//    -   [Starts With] - will select only the test files starting with the filter entered
//    -   [Contains] - will select only test files containing the filter entered
//    -   [Ends With] - will select only test files ending with the filter entered
// FolderFileFilter - the filter used to select only matching files within the Test Folder.
// MaxScreenShotsToTake - the maximum number of screen shots to take including any unscheduled screenshots taken due to an error.
//    -   When -1, only errors will create screen shots.
//    -   When 0, there is no limit and all screenshots will be taken.
//    -   When any other number, that number of screenshots or less will be taken depending upon the test and the max set.
//    -   Errors like, Element not found, will create a screenshot to allow you to see the page the application was on when the error occurred.
// In the example configuration file provided below, a single specific test file is being tested, the screen shot folder is specified, 
// but no screenshots will be taken, only the test Chrome browser will be used and will be visible, the TestFolderName specified, 
// FolderFileFilterType specified, and FolderFileFilter specified  are all disregarded because SpecifiyTestFiles is true, meaning only files specifically specified will be used.
// The commented test file lines were included so that you can see that duplicate TestFileName0 keys can be used as well as uniquely 
// named incremental TestFileNames like TestFileName1, TestFileName2 etc.. can be used.  Just ensure that they are not preceded by comment characters, if intended to run.
//TestFileName0=C:\TestSettings2.txt
//TestFileName1=C:\TestSettings2.txt
TestFileName0=C:\TestSettings.txt
ScreenShotSaveFolder=C:\ScreenShots\MySite
MaxScreenShotsToTake=-1
BrowserType=Chrome
RunHeadless=false
TestAllBrowsers=false
SpecifyTestFiles=true
SortSpecifiedTestFiles=false
TestFolderName=C:\MyTestFolder\
FolderFileFilterType=Starts_With
FolderFileFilter=MyPhrase


╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                              TEST FILE FORMAT                                                                                                          ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
### All lines beginning with ### are comments, in the Test File, and are disregarded by the Test Application.
### ╔══════════════════════════════════╦═════════════════════════╦═══════════════════════╦════════════════════════════════════════╦══════════════════════════╗
### ║ ╠[URL/XPath/CssSelector/TagName] ; [Action/Expected value] ; [Element Lookup Type] ; [Perform Action other than Read Value] ; [Critical Assertion] ╣   ║
### ╚══════════════════════════════════╩═════════════════════════╩═══════════════════════╩════════════════════════════════════════╩══════════════════════════╝
### Each test script begins with ╠ (alt + 204) and ends with ╣ (alt + 185).  These line delimiters allow for tests to span multiple lines.
### Each parameter is separated by a space + semi-colon + space.
### The first parameter is one of the following: url to navigate to, or Element (xPath, CssSelector, Tag Name, ClassName, ID)
### The second parameter is the action to take or expected value to retrieve.  For URLs both are required separated by a space then (alt + 206), 
###     ╬ then space. ' ╬ '  optionally add a second space + (alt + 206) + space delimiter to add a time delay (thread sleep value in milli-seconds)
###     to give the event time to complete.
###     The format is: Action ╬ Expected Value ╬ Time delay before making the assertion.  Some commands allow for many delimited values in this field.
###     For context menu navigation the action can be a chain of up or down arrow keys as well to navigate to the desired menu item.
###     IMPORTANT: If performing context menu navigation or using arrow keys in general, do not move your mouse or change focus from the browser running the test.
###     Changing the focus will interupt the test and cause inaccurate results.
### The third parameter is the type of check to perform and will be ignored for performing Navigation where that is irrelevant
###        acceptable values are xPath, CssSelector, Tag Name, ClassName, ID and n/a
### The fourth parameter is the PerformAction boolean field.  Set this to true when performing an action other than retrieving the text value of the element.
###        Examples of when this is true: Text should be entered, a click occurs, a wait, or Navigating, switching Tabs.
### The fifth parameter is the IsCrucial boolean.  This indicates that should this step fail, all testing should stop!
###       When true, if the assertion fails all testing stops immediately.
###       When false, if the assertion fails, the tests continue and the failed results appear in red text.
###       All successful assertions will appear in green text.  All failed assertions will appear in red text.

###  The examples below are are not all inclusive but rather attempt to provide you with a basic understanding
###  so that you can make the necessary changes to accomplish a testing task.
###  When an error occurs it is most likely due to an element not found and a screenshot will automatically be taken,
###  if you haven't set or reached the maximum number of screenshots allowed.

###  ═════════[ NAVIGATION ]════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  All Navigation steps should be marked as crucial, as all subsequent checks require that navigation to complete successfully!!!
###  To Navigate and mark that step as crucial
╠https://www.w3schools.com/bootstrap/tryit.asp?filename=trybs_ref_comp_dropdown-menu&stacked=h ; Navigate ; n/a ; true ; true╣

###  To Navigate, assert that the URL is what follows the ╬ character and to wait 4 thousand milli-seconds before making the assertion to allow the page to load:
###  PLEASE NOTE: Asserting that the URL is correct does not mean that a server transfer didn't redirect the URL to a different page but leave the URL untouched.
╠https://formy-project.herokuapp.com/form ; Navigate ╬ https://formy-project.herokuapp.com/form ╬ 4000 ; n/a ; true ; true╣

###  To Navigate and Authenticate with username and password and assert that the URL is what follows the ╬ character and to wait 4 thousand milli-seconds 
###        before making the assertion to allow the page to load:
╠https://username:password@formy-project.herokuapp.com/form ; Navigate ╬ https://formy-project.herokuapp.com/form ╬ 4000 ; n/a ; true ; true╣

###  To Navigate and Authenticate with username and password:
╠https://username:password@formy-project.herokuapp.com/form ; Navigate ; n/a ; true ; false╣

###  To Navigate, assert that the URL, add a time delay and set the browser dimensions to 800 width by 800 height:
╠https://formy-project.herokuapp.com/form ; Navigate ╬ https://formy-project.herokuapp.com/form ╬ 4000  ╬ w=800 h=800 ; n/a ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ ALERT POPUP LOGIN ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To login when presented with an alert style popup which could happen upon landing on the site or after the site redirects you, and to make this crucial.
###  Please note this is for normal passwords which cannot contain spaces or characters that require escaping.
╠n/a ; login username password ; n/a ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK URL WITHOUT NAVIGATION ]══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check a URL without navigating and to make it non-crucial.  To make it crucial change the last parameter to true.
╠n/a ; URL ╬ https://formy-project.herokuapp.com/thanks ; n/a ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK GET REQUEST STATUS WITHOUT NAVIGATION ]═══════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check the Get Requests status of a URL without navigating and to make it crucial.  To make it non-crucial change the last parameter to false.
###  The Space between check and get is optional as shown below.
╠https://semantic-ui.com/modules/dropdown.html ; checkget ╬ 200 ; n/a ; false ; true╣
╠https://semantic-ui.com/modules/dropdown.html ; check get ╬ 200 ; n/a ; false ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK POST REQUEST STATUS WITHOUT NAVIGATION ]══════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check the Post Requests status of a URL without navigating and to make it crucial.  To make it non-crucial change the last parameter to false.
###  The Space between check and get is optional as shown below.
╠https://semantic-ui.com/modules/dropdown.html ; checkpost ╬ 200 ; n/a ; false ; true╣
╠https://semantic-ui.com/modules/dropdown.html ; check post ╬ 200 ; n/a ; false ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK DOCUMENT READY STATE COMPLETE WITHOUT NAVIGATION AS A POST NAVIGATION STEP]═══════════════════════════════════════════════════════════════════
###  To check that the document ready state is complete after previously navigating to a new page and to make it crucial. 
###  To make it non-crucial change the last parameter to false.
###  Use page as the accessor.  This will be most useful for triggered navigation.
╠page ; wait ╬ 15 ; xPath ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK DOCUMENT READY STATE COMPLETE WITH NAVIGATION ]═══════════════════════════════════════════════════════════════════════════════════════════════
###  To check that the document ready state is complete with navigation and to make it crucial.  To make it non-crucial change the last parameter to false.
###  Use page along with the URL as the accessor separated by a space.  This is useful for explicit navigation.
╠page https://semantic-ui.com/modules/dropdown.html ; wait ╬ 15 ; xPath ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK ALL PAGE LINKS ]══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check all page links and to make it non-crucial.  To make it crucial change the last parameter to true.
###  This will check for a status code of 200 for all links on the page but will report the status code for all links.
╠https://semantic-ui.com/modules/dropdown.html ; check links ; n/a ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK ALL PAGE IMAGE SRC TAGS ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check all page image src tags, to ensure a source exists and to make it non-crucial.  To make it crucial change the last parameter to true.
###  The src tag will be checked to see if it exists and if it returns a status code of 200 for all image sources but will report the status of all image sources.
╠https://semantic-ui.com/modules/dropdown.html ; check images src ; n/a ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECK ALL PAGE IMAGE ALT TAGS ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To check all page image alt tags, for ADA compliance and to make it crucial.  To make it non-crucial change the last parameter to false.
###  The alt tag will checked to see if it exists and is not empty.  Empty tags will be flagged as failed.
╠https://semantic-ui.com/modules/dropdown.html ; check images alt ; n/a ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ WAITING A SPECIFIC AMOUNT OF TIME FOR ITEMS TO BE AVAILABLE ]═══════════════════════════════════════════════════════════════════════════════════════
###  To wait for a specific amount of time before continuing to allow for page loading or script completion
###  To wait for 5 thousand milli-seconds before continuing onto the next step.
╠n/a ; Wait ╬ 5000 ; n/a ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ WAITING FOR THE PRESENCE OF AN ELEMENT ]════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To wait for an element to be present, requires checking for the element using an accessor unlike waiting a specific amount of time.
###  To wait for for a maximum of 15 seconds for an element to be present and making this check crucial, use the following.
###  To make it non-crucial change the last parameter to false.
╠/html/body/div[4]/div/div[2]/div[4]/div[1]/div[2]/div ; wait ╬ 15 ; xPath ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ WAITING FOR DOCUMENT READY STATE COMPLETE ]═════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To wait for the page to fully load and document state to be complete, use the following command.
###  Please note that the accessor is set to page and that an accessor type is present.  Any Accessor Type must be present, although it is not used,
###  to distinguish this document ready state complete wait from a time interval wait.
###  To wait for for a maximum of 15 seconds for document state complete and to make this check crucial, use the following.
###  To make it non-crucial change the last parameter to false.
//╠page ; wait ╬ 15 ; xPath ; true ; true╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ FILLING IN TEXT FIELDS ]════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To fill in a field by ID and to make it non-crucial.  To make it crucial change the last parameter to true.
╠first-name ; John ; ID ; true ; false╣

To fill in a field by ID and to make it non-crucial when it contains a reserved command like click.  To make it crucial change the last parameter to true.
╠first-name ; sendkeys ╬ click ; ID ; true ; false╣

To fill in a field using the value you persisted in an earlier step use the following.
╠first-name ; Sendkeys ╬ PersistedString ; ID ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CHECKING A CHECKBOX/RADIOBUTTON - CLICKING A BUTTON ]═══════════════════════════════════════════════════════════════════════════════════════════════
###  To click an element by ID
╠checkbox-2 ; click ; ID ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ CLICKING AN ELEMENT THAT FORCES NAVIGATION ]════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To click an element by xPath that navigates to a new page and check the url of the new page after waiting 5 thousand milli-seconds for the page to load.
╠/html[1]/body[1]/div[1]/div[2]/div[1]/div[1]/div[1]/h4[3] ; click ╬ https://www.davita.com/education ╬ 5000 ; xPath ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ DOUBLE CLICKING AN ELEMENT ]════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To double click an element by ID.  If this is a text field, double clicking it will select the first word.
╠first-name ; doubleclick ; ID ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ SELECTING A MENU ITEM ELEMENT ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  When sending up, down, right and left arrows as a list of keystrokes, you can use the sendkeys action with a space afterward and an optional time between sending,
###  along with a list of keys to send, to mimic human typing.  The default interval is 400 milli-seconds but in the example below 600 milli-seconds is used.
╠/html/body/div[4]/div/div[2]/div[4]/div[1]/div[2]/div ; sendkeys 600 ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down
 ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Arrow_Right ╬ Keys.Arrow_Down ╬ Keys.Arrow_Down ╬ Keys.Return
 ; xPath ; true ; true╣

###  You can send these as individual commands as shown below if you need to change the time between commands or to track a particular issue when sending commands.
╠ /html/body/div[4]/div/div[2]/div[4]/div[1]/div[2]/div ; Keys.ARROW_RIGHT ; xPath ; true ; false ╣
╠ n/a ; Wait ╬ 400 ; n/a ; true ; false ╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ RETRIEVING TEXT FROM AN ELEMENT AND MAKING AN EQUALS ASSERTION ]════════════════════════════════════════════════════════════════════════════════════
###  Retrieving text is usually non-crucial and test execution can usually continue so the following examples are all non-crucial.  Update based on your requirements.
###  To retrieve the text of an element by ClassName and make the assertion non-crucial
╠alert ; The form was successfully submitted! ; ClassName ; false ; false╣

###  To retrieve the text of an element by xPath
╠/html[1]/body[1]/div[1]/div[1]/div[1]/ul[1]/li[1]/div[1]/div[1]/h1[1] ; Empower Yourself with Kidney Knowledge ; xPath ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ RETRIEVING TEXT FROM AN ELEMENT AND MAKING A NOT EQUAL ASSERTION ]══════════════════════════════════════════════════════════════════════════════════
###  Just as there are times when you need to ensure an element's text equals a value, there are times 
###  when you need to ensure that an element's text does not equal a specific value.
###  To retrieve the text of an element by xPath and make the not equal assertion non-crucial.
╠/html[1]/body[1]/div[1]/form[1]/div[1]/div[4]/div[1] ; != ╬ Highest levl of education ; xPath ; false ; false╣

###  To retrieve the text of an element by xPath and compare it to the persisted value and assert that it is not equal.
╠/html[1]/body[1]/div[1]/form[1]/div[1]/div[4]/div[1] ; != ╬ PersistedString ; xPath ; false ; false╣

###  ═════════[ RETRIEVING TEXT FROM AN ELEMENT IN AN IFRAME ]══════════════════════════════════════════════════════════════════════════════════════════════════════
###  When you are attempting to access an element in an iFrame, you must first switch to that iframe.
###  The syntax for doing so is placed in the second parameter using the key phrase Switch to iframe 
###  followed by the name in square brackets as shown in the following example.
###  To retrieve the text of an element in an iFrame by xPath
╠/html/body/select ; Switch to iframe [iframeResult] ╬ Volvo ; xPath ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ PERSISTING RETRIEVED TEXT IN A VARIABLE FOR LATER USE ]═════════════════════════════════════════════════════════════════════════════════════════════
###  There may be a time when you want to compare the value retrieved from one element with the value of another.
###  Unfortunately, you cannot do this directly, but what you can do is persist the value from one element and compare that 
###  persisted value with the value of the other element, which accomplishes comparing one element value with another.
###  To persist the value of an element, use the following:
╠/html[1]/body[1]/div[1]/form[1]/div[1]/div[4]/div[1] ; PersistString ; xPath ; true ; false╣

###  To compare the persisted value to an element, use the following:
╠/html[1]/body[1]/div[1]/form[1]/div[1]/div[4]/div[1] ; PersistedString ; xPath ; false ; false╣

###  To retrieve the text of an element by xPath and compare it to the persisted value and assert that it is not equal.
╠/html[1]/body[1]/div[1]/form[1]/div[1]/div[4]/div[1] ; != ╬ PersistedString ; xPath ; false ; false╣

###  Although the following can be found in the sendkeys section, in an effort to group all persistence in one 
###  location it is duplicated here
###  To send the persisted value to a textbox or textarea form control, use the following:
╠first-name ; Sendkeys ╬ PersistedString ; ID ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════


###  ═════════[ CLICK AN ELEMENT IN AN IFRAME ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To click an element by xPath in an iFrame
╠/html/body/div/div/ul/li[1]/a ; Switch to iframe [iframeResult] ╬ click ; xPath ; true ; true╣

###  To select an option from an HTML Select (drop down/list) element.
╠option[value='1'] ; click ; CssSelector ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ TAKING SCREENSHOTS ]════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  To take a screen shot/print screen.  The browser will be resized automatically to capture all page content.
╠n/a ; ScreenShot ; n/a ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ SWITCHING BROWSER TABS ]════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  Some actions are related and to avoid unnecessary steps the enter key will be pressed after right clicking and arrowing to a particular item.
###  To Right click on an element, move down to the first menu item, click it to open in a new tab and switch to the new tab:
╠//*[@id="rso"]/div[1]/div/div[1]/div/div/div[1]/a ; right click ╬ Keys.Arrow_Down ╬ Switch to tab ; xPath ; true ; false╣

###  To Switch back to the first tab after switching to the second tab
╠n/a ; Switch to tab 0 ; n/a ; true ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ FIND ELEMENTS THAT HAVE SPECIFIC TEXT ]═════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  There are times when you may need to search for text but do not know the accessor necessary to find that text.
###  The Find functionality allows you search all elements regardless of type or just all tags of a specific type.
###  Additionally, the Find functionality returns the xPath of all elements where the text is found but when searching 
###  for text without specifying a tag, only the actual tag containing the text is returned, not elements in the upper 
###  hierarchy; however, when using a specific tag, if a child tag of that tag contains the text, the searched tag will be returned 
###  as successfully containing that text. 
###  To Find text searching all elements and make this non-crucial, use the following.
╠n/a ; find  ╬  ╬ Highest level of education ; n/a ; false ; false╣

###  To Find text searching all div elements and make this non-crucial, use the following.
╠n/a ; find  ╬ div ╬ Highest level of education ; n/a ; false ; false╣

###  To Find text searching all label elements and make this non-crucial, use the following.
╠n/a ; find  ╬ label ╬ Highest level of education ; n/a ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════

###  ═════════[ FIND ELEMENTS THAT CONTAIN TEXT ]═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════
###  There are times when you may need to search for a portion of text but do not know the accessor necessary to find that text.
###  A specific instance might be when searching for text that would be in a paragraph.  You wouldn't want to add the entire paragraph when you can add a 
###  snippet to verify that part of it is there. 
###  Additionally, the Find functionality returns the xPath of all elements where the text is found.
###  To Find element containing text searching all div elements and make this non-crucial, use the following.
╠n/a ; find contains  ╬ div ╬ Highest level ; n/a ; false ; false╣
###  ═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════





