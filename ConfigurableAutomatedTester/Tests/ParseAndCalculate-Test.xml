<?xml version="1.0" encoding="UTF-8" ?>
<testSteps>
	<step>
		<!-- Navigate to a page - The driver will go to the page in arg1 and compare that URL with the expected value if provided -->
		<command>navigate</command>
		<actionType>write</actionType>
		<!-- Expected value - required only when validating successful navigation. For this command it is optional but suggested. -->
		<expectedValue>https://timesofindia.indiatimes.com/poll.cms</expectedValue>
		<crucial>TRUE</crucial>
		<arguments>
			<!-- first argument expected by the command - A URL is expected for this command; It is also Required!!! -->
			<arg1>https://timesofindia.indiatimes.com/poll.cms</arg1>
			<!-- second argument, can be optional. For this command it is the time in milliseconds to wait before the assertion is made. -->
			<arg2>1000</arg2> 
			<!-- third argument is optional and is for the window dimensions. Add them like this if desired. (w=800 h=800) -->
			<arg3></arg3> 
		</arguments>
	</step>
	<!--<step>
		
		<command>assert</command>
		<actionType>read</actionType>
		<expectedValue>Complete Web Form</expectedValue>
		<crucial>TRUE</crucial>				   	
		<accessor>/html/body/div/h1</accessor>
		<accessorType>xPath</accessorType>
	</step>-->
	<step>
		<command>parse and calculate double</command>
		<actionType>read</actionType>
		<accessor>mathq2</accessor>
		<accessorType>id</accessorType>
		<crucial>FALSE</crucial>
		<expectedValue>5.0</expectedValue>
		<arguments>
			<!-- Type of delimiter -->
			<arg1> </arg1>
			<!--  index of first number in equation -->
			<arg2>0</arg2>
			<!-- index of second number in equation -->
			<arg3>2</arg3>
			<!-- index of operator in equation -->
			<arg3>1</arg3>
			<!-- form field to write answer or persist to persist this -->
			<arg4>mathuserans2</arg4>		
		</arguments>
	</step>
	<step>
		<command>wait</command>
		<actionType>write</actionType>
		<crucial>TRUE</crucial>
		<arguments>
			<arg1>5000</arg1>
		</arguments>
	</step>
	<step>
		<!-- Navigate to a page - The driver will go to the page in arg1 and compare that URL with the expected value if provided -->
		<command>navigate</command>
		<actionType>write</actionType>
		<!-- Expected value - required only when validating successful navigation. For this command it is optional but suggested. -->
		<expectedValue>https://timesofindia.indiatimes.com/poll.cms</expectedValue>
		<crucial>TRUE</crucial>
		<arguments>
			<!-- first argument expected by the command - A URL is expected for this command; It is also Required!!! -->
			<arg1>https://timesofindia.indiatimes.com/poll.cms</arg1>
			<!-- second argument, can be optional. For this command it is the time in milliseconds to wait before the assertion is made. -->
			<arg2>1000</arg2> 
			<!-- third argument is optional and is for the window dimensions. Add them like this if desired. (w=800 h=800) -->
			<arg3></arg3> 
		</arguments>
	</step>
	<step>
		<command>parse and calculate long</command>
		<actionType>read</actionType>
		<accessor>mathq2</accessor>
		<accessorType>id</accessorType>
		<crucial>FALSE</crucial>
		<arguments>
			<!-- Type of delimiter -->
			<arg1> </arg1>
			<!--  index of first number in equation -->
			<arg2>0</arg2>
			<!-- index of second number in equation -->
			<arg3>2</arg3>
			<!-- index of operator in equation -->
			<arg3>1</arg3>
			<!-- form field to write answer or persist to persist this -->
			<arg4>persist</arg4>		
		</arguments>
	</step>
	<step>
		<!-- Tested - Good -->
		<!-- multiple keystroke command... SENDKEYS! -->
		<command>sendkeys</command>
		<actionType>write</actionType>
		<crucial>FALSE</crucial>
		<!-- the accessor is the target element where the key strokes will be sent to -->
		<accessor>mathuserans2</accessor>
		<accessorType>ID</accessorType>
		<arguments>
			<!-- We can have as many key strokes as we want. We will use the arg tags for storing each character/command. The order or writing would be sequetial: arg1 > arg2 > arg3 > etc. If you want to send a string, just enter the whole string in one arg tag-->
			<!--<arg1>PersistedString**_uid_**</arg1>-->
			<arg1>PersistedString</arg1>
			<!--arg1>PersistedString</arg1-->
		</arguments>
	</step>
	<step>
		<command>wait</command>
		<actionType>write</actionType>
		<crucial>TRUE</crucial>
		<arguments>
			<arg1>5000</arg1>
		</arguments>
	</step>	
</testSteps>